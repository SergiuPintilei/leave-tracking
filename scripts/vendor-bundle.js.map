{"version":3,"sources":["/node_modules/moment-business/dist/moment-business.js","/node_modules/nearest-periodic-value/dist/nearest-periodic-value.js","/node_modules/contained-periodic-values/dist/contained-periodic-values.js"],"names":[],"mappings":"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","file":"vendor-bundle.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('contained-periodic-values')) :\n  typeof define === 'function' && define.amd ? define(['contained-periodic-values'], factory) :\n  global.momentBusiness = factory(global.containedPeriodicValues)\n}(this, function (containedPeriodicValues) { 'use strict';\n\n  function determineSign(x) {\n    x = +x;\n    return x > 0 ? 1 : -1;\n  }\n\n  var moment_business = {\n    weekDays(startMoment, endMoment) {\n      let start, end;\n      let reverse = endMoment.isBefore(startMoment);\n      if (reverse) {\n        start = endMoment;\n        end = startMoment;\n      } else {\n        start = startMoment;\n        end = endMoment;\n      }\n\n      const startDay = start.day();\n      const totalDays = Math.abs(end.diff(start, 'days'));\n      const containedSundays = containedPeriodicValues(startDay, totalDays + startDay, 0, 7);\n      const containedSaturdays = containedPeriodicValues(startDay, totalDays + startDay, 6, 7);\n      const coefficient = reverse ? -1 : 1;\n\n      return coefficient * (totalDays - (containedSaturdays + containedSundays));\n    },\n\n    weekendDays(startMoment, endMoment) {\n      const totalDaysDiff = endMoment.diff(startMoment, 'days');\n      const weekDays = this.weekDays(startMoment, endMoment);\n\n      return totalDaysDiff - weekDays;\n    },\n\n    addWeekDays(moment, amount) {\n      if (amount === 0 || isNaN(amount)) { return moment; }\n\n      var sign = determineSign(amount);\n      var day = moment.day();\n      var absIncrement = Math.abs(amount);\n\n      var days = 0;\n\n      if (day === 0 && sign === -1) {\n        days = 1;\n      } else if (day === 6 && sign === 1) {\n        days = 1;\n      }\n\n      // Add padding for weekends.\n      var paddedAbsIncrement = absIncrement;\n      if (day !== 0 && day !== 6 && sign > 0) {\n        paddedAbsIncrement += day;\n      } else if (day !== 0 && day !== 6 && sign < 0) {\n        paddedAbsIncrement += 6 - day;\n      }\n      var weekendsInbetween =\n        Math.max(Math.floor(paddedAbsIncrement / 5) - 1, 0) +\n        (paddedAbsIncrement > 5 && paddedAbsIncrement % 5 > 0 ? 1 : 0);\n\n      // Add the increment and number of weekends.\n      days += absIncrement + weekendsInbetween * 2;\n\n      moment.add(sign * days, 'days');\n      return moment;\n    },\n\n    subtractWeekDays(moment, amount) {\n      return this.addWeekDays(moment, -amount);\n    },\n\n    isWeekDay(moment) {\n      return moment.isoWeekday() < 6;\n    },\n\n    isWeekendDay(moment) {\n      return moment.isoWeekday() > 5;\n    }\n  };\n\n  return moment_business;\n\n}));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.nearestPeriodicValue = factory()\n}(this, function () { 'use strict';\n\n  /*jshint -W018 */\n\n  function nearestPeriodicValue(point, value, period) {\n\n    var relation = (value - point) / period;\n\n    // We're equidistant from the nearest point if the\n    // distance from the point is a half-integer value\n    // of our period.\n    var equidistant = !(relation % 0.5) && relation % 1;\n\n    // If we're equidistant, then we add a period to\n    // ensure that we always pick the value in front\n    var mod = equidistant ? period : 0;\n\n    // Adjust our value by an amount given by the closest #\n    // of periods contained in the distance between the point\n    // and the value\n    return mod + (value - period * Math.round(relation));\n  }\n\n  var nearest_periodic_value = nearestPeriodicValue;\n\n  return nearest_periodic_value;\n\n}));\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('nearest-periodic-value')) :\n  typeof define === 'function' && define.amd ? define(['nearest-periodic-value'], factory) :\n  global.containedPeriodicValues = factory(global.nearestPeriodicValue)\n}(this, function (nearestPeriodicValue) { 'use strict';\n\n  function containedPeriodicValues(start, end, value, period) {\n\n    // Inclusive start; exclusive end\n    if (start === end) { return 0; }\n\n    // Flip our interval if it isn't ordered properly\n    if (start > end) {\n      var newEnd = start;\n      start = end;\n      end = newEnd;\n    }\n\n    // Make our interval have an exclusive end\n    end--;\n    \n    var nearest = nearestPeriodicValue(start, value, period);\n\n    // Ensure that the nearest value is in front of the start\n    // of the interval\n    if (nearest - start < 0) {\n      nearest += period;\n    }\n\n    // If we can't even reach the first value, then it is 0\n    if ((nearest - start) > (end - start)) {\n      return 0;\n    }\n\n    // Otherwise, we have reached it, so we start with 1.\n    // Then we add one for every full period in our interval\n    else {\n      return 1 + parseInt((end - nearest) / period);\n    }\n  }\n\n  var contained_periodic_values = containedPeriodicValues;\n\n  return contained_periodic_values;\n\n}));\n"],"sourceRoot":".."}